/*
 * НТТ test task server API
 *
 * REST API для сервера в тестовом задании, основанное на OpenAPI 3.0-спецификации.  [Лариса Морожникова](https://t.me/l_milk)
 *
 * API version: 1.0.0
 * Contact: larisa.moroz@gmail.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package main

import (
	"fmt"
	"github.com/joho/godotenv"
	_ "github.com/lib/pq"
	sw "github.com/lmoroz/ntt-test-task-go-server/go"
	"log"
	"net/http"
	"os"
)

func main() {
	err := godotenv.Load()
	sw.CheckErrorFatal(err, "Error loading .env. Is it in place?")

	pgHost := getEnvVariable("PG_HOST")
	pgPort := getEnvVariable("PG_PORT")
	pgUser := getEnvVariable("PG_USER")
	pgPassword := getEnvVariable("PG_PASSWORD")
	pgDbName := getEnvVariable("PG_DB")
	pgTableName := getEnvVariable("PG_TABLE")
	jsonFilename := getEnvVariable("DATA_FILE_NAME")
	port := getEnvVariable("SERVER_PORT")

	connStr := fmt.Sprintf("host=%s port=%s user=%s password=%s dbname=%s sslmode=disable", pgHost, pgPort, pgUser, pgPassword, pgDbName)
	db := sw.DBConnect(connStr)

	defer db.Close()

	sw.FillDb(db, pgTableName, jsonFilename)

	router := sw.NewRouter(db, pgTableName)

	log.Printf("Server started")
	log.Fatal(http.ListenAndServe(":"+port, router))
}

func getEnvVariable(key string) string {
	value := os.Getenv(key)
	if value == "" {
		log.Fatalf("Environment variable %s is not set or is empty", key)
	}
	return value
}
